//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Xml;
using System.Collections;
using System.Collections.Generic;

using UnityEditor;
using UnityEngine;


namespace EditorNode
{
	public class RootNode
	{
		public string file_name;
		public List<BaseNode> nodes = new List<BaseNode> ();

		public Rect windowRect;
		public BaseNode root_node;

		public float start_x, start_y;

		public RootNode(float x,float y)
		{
			this.start_x = x;
			this.start_y = y;
		}

		public void SetFileName (string file_name)
		{
			this.file_name = file_name;
		}

		public void Load(string file_name)
		{
			string path = System.IO.Path.GetFullPath(System.IO.Path.Combine(Application.dataPath, file_name));
			XmlDocument xml = new XmlDocument();//初始化一个xml实例
			xml.Load(path);//导入指定xml文件
			this.root_node = dfs (xml.DocumentElement);
		}

		private BaseNode dfs(XmlElement node)
		{

			if(node.Name=="SubRootNode")
			{
				XmlElement e = (XmlElement)node;
				string sub_file_name = System.IO.Path.GetFullPath(System.IO.Path.Combine(Application.dataPath, "data/"+e.GetAttribute("file")));
				RootNode sub_root = new RootNode(Convert.ToSingle(node.GetAttribute("pos_x"))+this.start_x,this.start_y+Convert.ToSingle(node.GetAttribute("pos_y")));
				sub_root.Load(sub_file_name);
				this.nodes.AddRange(sub_root.nodes);
				return sub_root.root_node;
			}

			BaseNode current = new BaseNode(Convert.ToSingle(node.GetAttribute("pos_x"))+this.start_x,this.start_y+Convert.ToSingle(node.GetAttribute("pos_y")));
			foreach (XmlNode n in node.ChildNodes) {
				if(n.NodeType==XmlNodeType.Element)
				{
					BaseNode c = dfs((XmlElement)n);
					if(c!=null)
						current.AddTarget(c);
				}
			}
			nodes.Add (current);
			return current;
		}

		public void ResetRectangle()
		{
		}

		public void Save(string file_name)
		{
			if (root_node!=null) {
				string s = root_node.NodeToString ();
				
				using (System.IO.StreamWriter file = new System.IO.StreamWriter(System.IO.Path.GetFullPath(System.IO.Path.Combine(Application.dataPath, file_name)),true)) {
					file.Write(s);
					file.Close();
				}
			}
		}

	}
}

